(function() {
    var implementors = Object.fromEntries([["hopr_bindings",[["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_announcements/HoprAnnouncements/struct.KeyBindingWithSignature.html\" title=\"struct hopr_bindings::hopr_announcements::HoprAnnouncements::KeyBindingWithSignature\">KeyBindingWithSignature</a>&gt; for <a class=\"struct\" href=\"hopr_bindings/hopr_announcements/HoprAnnouncements/struct.KeyBindingWithSignature.html\" title=\"struct hopr_bindings::hopr_announcements::HoprAnnouncements::KeyBindingWithSignature\">KeyBindingWithSignature</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_announcements/HoprAnnouncements/struct.KeyId.html\" title=\"struct hopr_bindings::hopr_announcements::HoprAnnouncements::KeyId\">KeyId</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_capability_permissions/HoprCapabilityPermissions/struct.GranularPermission.html\" title=\"struct hopr_bindings::hopr_capability_permissions::HoprCapabilityPermissions::GranularPermission\">GranularPermission</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_capability_permissions/HoprCapabilityPermissions/struct.Target.html\" title=\"struct hopr_bindings::hopr_capability_permissions::HoprCapabilityPermissions::Target\">Target</a>&gt; for U256"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprChannels/struct.RedeemableTicket.html\" title=\"struct hopr_bindings::hopr_channels::HoprChannels::RedeemableTicket\">RedeemableTicket</a>&gt; for <a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprChannels/struct.RedeemableTicket.html\" title=\"struct hopr_bindings::hopr_channels::HoprChannels::RedeemableTicket\">RedeemableTicket</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprChannels/struct.TicketData.html\" title=\"struct hopr_bindings::hopr_channels::HoprChannels::TicketData\">TicketData</a>&gt; for <a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprChannels/struct.TicketData.html\" title=\"struct hopr_bindings::hopr_channels::HoprChannels::TicketData\">TicketData</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprChannelsType/struct.Balance.html\" title=\"struct hopr_bindings::hopr_channels::HoprChannelsType::Balance\">Balance</a>&gt; for U96"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprChannelsType/struct.ChannelEpoch.html\" title=\"struct hopr_bindings::hopr_channels::HoprChannelsType::ChannelEpoch\">ChannelEpoch</a>&gt; for U24"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprChannelsType/struct.ChannelStatus.html\" title=\"struct hopr_bindings::hopr_channels::HoprChannelsType::ChannelStatus\">ChannelStatus</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprChannelsType/struct.TicketIndex.html\" title=\"struct hopr_bindings::hopr_channels::HoprChannelsType::TicketIndex\">TicketIndex</a>&gt; for U48"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprChannelsType/struct.Timestamp.html\" title=\"struct hopr_bindings::hopr_channels::HoprChannelsType::Timestamp\">Timestamp</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprChannelsType/struct.WinProb.html\" title=\"struct hopr_bindings::hopr_channels::HoprChannelsType::WinProb\">WinProb</a>&gt; for U56"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprCrypto/struct.CompactSignature.html\" title=\"struct hopr_bindings::hopr_channels::HoprCrypto::CompactSignature\">CompactSignature</a>&gt; for <a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprCrypto/struct.CompactSignature.html\" title=\"struct hopr_bindings::hopr_channels::HoprCrypto::CompactSignature\">CompactSignature</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprCrypto/struct.VRFParameters.html\" title=\"struct hopr_bindings::hopr_channels::HoprCrypto::VRFParameters\">VRFParameters</a>&gt; for <a class=\"struct\" href=\"hopr_bindings/hopr_channels/HoprCrypto/struct.VRFParameters.html\" title=\"struct hopr_bindings::hopr_channels::HoprCrypto::VRFParameters\">VRFParameters</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_node_management_module/Enum/struct.Operation.html\" title=\"struct hopr_bindings::hopr_node_management_module::Enum::Operation\">Operation</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_node_management_module/HoprNodeManagementModule/struct.GranularPermission.html\" title=\"struct hopr_bindings::hopr_node_management_module::HoprNodeManagementModule::GranularPermission\">GranularPermission</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_node_management_module/HoprNodeManagementModule/struct.Target.html\" title=\"struct hopr_bindings::hopr_node_management_module::HoprNodeManagementModule::Target\">Target</a>&gt; for U256"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_node_stake_factory/HoprNodeStakeFactory/struct.HoprNetwork.html\" title=\"struct hopr_bindings::hopr_node_stake_factory::HoprNodeStakeFactory::HoprNetwork\">HoprNetwork</a>&gt; for <a class=\"struct\" href=\"hopr_bindings/hopr_node_stake_factory/HoprNodeStakeFactory/struct.HoprNetwork.html\" title=\"struct hopr_bindings::hopr_node_stake_factory::HoprNodeStakeFactory::HoprNetwork\">HoprNetwork</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_node_stake_factory/HoprNodeStakeFactory/struct.SafeLibAddress.html\" title=\"struct hopr_bindings::hopr_node_stake_factory::HoprNodeStakeFactory::SafeLibAddress\">SafeLibAddress</a>&gt; for <a class=\"struct\" href=\"hopr_bindings/hopr_node_stake_factory/HoprNodeStakeFactory/struct.SafeLibAddress.html\" title=\"struct hopr_bindings::hopr_node_stake_factory::HoprNodeStakeFactory::SafeLibAddress\">SafeLibAddress</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_node_stake_factory_events/HoprNodeStakeFactory/struct.HoprNetwork.html\" title=\"struct hopr_bindings::hopr_node_stake_factory_events::HoprNodeStakeFactory::HoprNetwork\">HoprNetwork</a>&gt; for <a class=\"struct\" href=\"hopr_bindings/hopr_node_stake_factory_events/HoprNodeStakeFactory/struct.HoprNetwork.html\" title=\"struct hopr_bindings::hopr_node_stake_factory_events::HoprNodeStakeFactory::HoprNetwork\">HoprNetwork</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_node_stake_factory_events/HoprNodeStakeFactory/struct.SafeLibAddress.html\" title=\"struct hopr_bindings::hopr_node_stake_factory_events::HoprNodeStakeFactory::SafeLibAddress\">SafeLibAddress</a>&gt; for <a class=\"struct\" href=\"hopr_bindings/hopr_node_stake_factory_events/HoprNodeStakeFactory/struct.SafeLibAddress.html\" title=\"struct hopr_bindings::hopr_node_stake_factory_events::HoprNodeStakeFactory::SafeLibAddress\">SafeLibAddress</a>"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_winning_probability_oracle/HoprWinningProbabilityOracle/struct.WinProb.html\" title=\"struct hopr_bindings::hopr_winning_probability_oracle::HoprWinningProbabilityOracle::WinProb\">WinProb</a>&gt; for U56"],["impl SolTypeValue&lt;<a class=\"struct\" href=\"hopr_bindings/hopr_winning_probability_oracle_events/HoprWinningProbabilityOracleEvents/struct.WinProb.html\" title=\"struct hopr_bindings::hopr_winning_probability_oracle_events::HoprWinningProbabilityOracleEvents::WinProb\">WinProb</a>&gt; for U56"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[8181]}